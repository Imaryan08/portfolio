{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imary\\\\OneDrive\\\\Desktop\\\\Github Repo\\\\portfolio\\\\src\\\\containers\\\\SectionContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles, Container, Typography } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport Divider from \"../components/Divider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SectionContainer = ({\n  children,\n  maxWidth,\n  full,\n  reverse,\n  title,\n  padding,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles({\n    full,\n    maxWidth,\n    padding\n  });\n  const titleControls = useAnimation();\n  const contentControls = useAnimation();\n  const [titleRef, titleInView] = useInView();\n  const [contentRef, contentInView] = useInView(); // const [contentStart, setContentStart]=useState(false)\n\n  useEffect(() => {\n    if (titleInView) {\n      titleControls.start(\"visible\");\n    }\n  }, [titleControls, titleInView]);\n  useEffect(() => {\n    if (contentInView) {\n      // setContentStart(true)\n      contentControls.start(\"visible\");\n    }\n  }, [contentControls, contentInView]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"section\",\n    className: classes.container,\n    ...rest,\n    children: [title && /*#__PURE__*/_jsxDEV(motion.div, {\n      ref: titleRef,\n      animate: titleControls,\n      initial: \"hidden\",\n      transition: {\n        delay: 0.3,\n        type: \"spring\",\n        stiffness: 100,\n        damping: 20\n      },\n      variants: {\n        visible: {\n          opacity: 1,\n          x: 0\n        },\n        hidden: {\n          opacity: 0,\n          x: reverse ? 0 : 0\n        }\n      },\n      className: classes.titleContainer,\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        width: \"20%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        color: \"initial\",\n        className: classes.title,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      ref: contentRef,\n      animate: contentControls,\n      initial: \"hidden\",\n      transition: {\n        delay: 0.5,\n        type: \"spring\",\n        stiffness: 100,\n        damping: 20,\n        when: \"beforeChildren\"\n      },\n      variants: {\n        visible: {\n          opacity: 1,\n          y: 0\n        },\n        hidden: {\n          opacity: 0,\n          y: -50\n        }\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SectionContainer, \"RBANUdIsjFGHzbpaVvssUMjbz+E=\", false, function () {\n  return [useStyles, useAnimation, useAnimation, useInView, useInView];\n});\n\n_c = SectionContainer;\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingTop: props => props.padding ? `${props.padding}px` : \"80px\",\n    paddingBottom: props => props.padding ? `${props.padding}px` : \"80px\"\n  },\n  titleContainer: {\n    paddingBottom: theme.spacing(8),\n    display: \"flex\",\n    alignItems: \"center\",\n    maxWidth: \"100%\"\n  },\n  title: {\n    margin: theme.spacing(0, 4),\n    textTransform: \"uppercase\",\n    whiteSpace: \"nowrap\"\n  },\n  childrenContainer: {\n    minHeight: \"100%\"\n  }\n}));\nexport default SectionContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SectionContainer\");","map":{"version":3,"sources":["C:/Users/imary/OneDrive/Desktop/Github Repo/portfolio/src/containers/SectionContainer.js"],"names":["React","useEffect","makeStyles","Container","Typography","motion","useAnimation","useInView","Divider","SectionContainer","children","maxWidth","full","reverse","title","padding","rest","classes","useStyles","titleControls","contentControls","titleRef","titleInView","contentRef","contentInView","start","container","delay","type","stiffness","damping","visible","opacity","x","hidden","titleContainer","when","y","theme","paddingTop","props","paddingBottom","spacing","display","alignItems","margin","textTransform","whiteSpace","childrenContainer","minHeight"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles, Container, Typography } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport Divider from \"../components/Divider\";\n\nconst SectionContainer = ({ children, maxWidth, full, reverse, title, padding, ...rest }) => {\n    const classes = useStyles({ full, maxWidth, padding });\n    const titleControls = useAnimation();\n    const contentControls = useAnimation();\n    const [titleRef, titleInView] = useInView();\n    const [contentRef, contentInView] = useInView();\n    // const [contentStart, setContentStart]=useState(false)\n\n    useEffect(() => {\n        if (titleInView) {\n            titleControls.start(\"visible\");\n        }\n    }, [titleControls, titleInView]);\n\n    useEffect(() => {\n        if (contentInView) {\n            // setContentStart(true)\n            contentControls.start(\"visible\");\n        }\n    }, [contentControls, contentInView]);\n\n    return (\n        <Container component=\"section\" className={classes.container} {...rest}>\n            {title && (\n                <motion.div\n                    ref={titleRef}\n                    animate={titleControls}\n                    initial=\"hidden\"\n                    transition={{\n                        delay: 0.3,\n                        type: \"spring\",\n                        stiffness: 100,\n                        damping: 20,\n                    }}\n                    variants={{\n                        visible: { opacity: 1, x: 0 },\n                        hidden: { opacity: 0, x: reverse ? 0 : 0 },\n                    }}\n                    className={classes.titleContainer}\n                >\n                    <Divider width=\"20%\"  />\n                    <Typography variant=\"h4\" color=\"initial\" className={classes.title}>\n                        {title}\n                    </Typography>\n                    <Divider fullWidth />\n                </motion.div>\n            )}\n            <motion.div\n                ref={contentRef}\n                animate={contentControls}\n                initial=\"hidden\"\n                transition={{\n                    delay: 0.5,\n                    type: \"spring\",\n                    stiffness: 100,\n                    damping: 20,\n                    when:\"beforeChildren\"\n                }}\n                variants={{\n                    visible: { opacity: 1, y: 0 },\n                hidden: { opacity: 0, y: -50 },\n                }}\n            >\n                {children}\n            </motion.div>\n        </Container>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        paddingTop: props => props.padding ? `${props.padding}px` : \"80px\",\n        paddingBottom: props => props.padding ? `${props.padding}px` : \"80px\",\n    },\n    titleContainer: {\n        paddingBottom: theme.spacing(8),\n        display: \"flex\",\n        alignItems: \"center\",\n        maxWidth:\"100%\"\n    },\n    title: {\n        margin: theme.spacing(0, 4),\n        textTransform:\"uppercase\",\n        whiteSpace: \"nowrap\"\n    },\n    childrenContainer: {\n        minHeight: \"100%\",\n    },\n}));\n\nexport default SectionContainer;\n"]},"metadata":{},"sourceType":"module"}