{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imary\\\\OneDrive\\\\Desktop\\\\Github Repo\\\\portfolio\\\\src\\\\components\\\\Navbar\\\\LangSelector.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles, Menu, MenuItem, Button } from \"@material-ui/core\";\nimport { KeyboardArrowDownSharp } from \"@material-ui/icons\";\nimport i18n from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\nimport \"flag-icon-css/css/flag-icon.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst languages = [{\n  code: \"fr\",\n  name: \"FR\",\n  country_code: \"fr\"\n}, {\n  code: \"en\",\n  name: \"EN\",\n  country_code: \"gb\"\n}];\n\nconst LangSelector = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClose = code => {\n    i18n.changeLanguage(code);\n    setAnchorEl(null);\n\n    if (props.onClose) {\n      props.onClose();\n    }\n  };\n\n  const currentLanguage = languages.find(elem => elem.code === t(\"language\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: e => setAnchorEl(e.currentTarget),\n      children: [currentLanguage && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `flag-icon flag-icon-${currentLanguage.country_code} ${classes.flagIcon}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), currentLanguage.name]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(KeyboardArrowDownSharp, {\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"profile-menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: () => setAnchorEl(null),\n      keepMounted: true,\n      elevation: 0,\n      getContentAnchorEl: null,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      className: classes.profileMenu,\n      disableScrollLock: true,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        className: classes.menuItem,\n        onClick: () => handleClose(\"en\"),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `flag-icon flag-icon-gb ${classes.flagIcon}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), \"EN\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        className: classes.menuItem,\n        onClick: () => handleClose(\"fr\"),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `flag-icon flag-icon-fr ${classes.flagIcon}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), \"FR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LangSelector, \"ByapeMBj0VdQQvRcvcDlNnApCNE=\", false, function () {\n  return [useStyles, useTranslation];\n});\n\n_c = LangSelector;\nconst useStyles = makeStyles(theme => ({\n  profileMenu: {\n    \"& .MuiPaper-root\": {\n      backgroundColor: theme.palette.primary.main,\n      marginTop: \"2px\",\n      boxShadow: theme.shadows[4]\n    }\n  },\n  menuItem: {\n    \"&:hover\": {\n      backgroundColor: theme.backgroundSecondary\n    }\n  },\n  flagIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\nexport default LangSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"LangSelector\");","map":{"version":3,"sources":["C:/Users/imary/OneDrive/Desktop/Github Repo/portfolio/src/components/Navbar/LangSelector.js"],"names":["React","useState","makeStyles","Menu","MenuItem","Button","KeyboardArrowDownSharp","i18n","useTranslation","languages","code","name","country_code","LangSelector","props","classes","useStyles","t","anchorEl","setAnchorEl","handleClose","changeLanguage","onClose","currentLanguage","find","elem","e","currentTarget","flagIcon","color","Boolean","vertical","horizontal","profileMenu","menuItem","theme","backgroundColor","palette","primary","main","marginTop","boxShadow","shadows","backgroundSecondary","marginRight","spacing"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles, Menu, MenuItem, Button } from \"@material-ui/core\";\nimport { KeyboardArrowDownSharp } from \"@material-ui/icons\";\nimport i18n from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\nimport \"flag-icon-css/css/flag-icon.min.css\";\n\nconst languages = [\n    {\n        code: \"fr\",\n        name: \"FR\",\n        country_code: \"fr\",\n    },\n    {\n        code: \"en\",\n        name: \"EN\",\n        country_code: \"gb\",\n    },\n];\n\nconst LangSelector = (props) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const handleClose = (code) => {\n        i18n.changeLanguage(code);\n        setAnchorEl(null);\n        if (props.onClose) {\n            props.onClose();\n        }\n    };\n\n    const currentLanguage = languages.find((elem) => elem.code === t(\"language\"));\n\n    return (\n        <div {...props}>\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => setAnchorEl(e.currentTarget)}>\n                {currentLanguage && (\n                    <>\n                        <span className={`flag-icon flag-icon-${currentLanguage.country_code} ${classes.flagIcon}`} />\n                        {currentLanguage.name}\n                    </>\n                )}\n                <KeyboardArrowDownSharp style={{ color: \"white\" }} />\n            </Button>\n            <Menu\n                id=\"profile-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={() => setAnchorEl(null)}\n                keepMounted\n                elevation={0}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"center\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\",\n                }}\n                className={classes.profileMenu}\n                disableScrollLock\n            >\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"en\")}>\n                    <span className={`flag-icon flag-icon-gb ${classes.flagIcon}`} />\n                    EN\n                </MenuItem>\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"fr\")}>\n                    <span className={`flag-icon flag-icon-fr ${classes.flagIcon}`} />\n                    FR\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    profileMenu: {\n        \"& .MuiPaper-root\": {\n            backgroundColor: theme.palette.primary.main,\n            marginTop: \"2px\",\n            boxShadow: theme.shadows[4],\n        },\n    },\n    menuItem: {\n        \"&:hover\": {\n            backgroundColor: theme.backgroundSecondary,\n        },\n    },\n    flagIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport default LangSelector;\n"]},"metadata":{},"sourceType":"module"}