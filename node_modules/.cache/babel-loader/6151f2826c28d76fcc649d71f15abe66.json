{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imary\\\\OneDrive\\\\Desktop\\\\Github Repo\\\\portfolio\\\\src\\\\components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport Logo from \"./Logo\";\nimport Menu from \"./Menu\";\nimport MobileMenu from \"./MobileMenu\";\nimport HamburgerIcon from \"./HamburgerIcon\";\nimport loaderContext from \"../../contexts/loaderContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [homeIsActive, setHomeIsActive] = useState(true);\n  const isMobile = useMediaQuery(\"(max-width:700px)\");\n  const {\n    isLoading\n  } = useContext(loaderContext);\n  const controls = useAnimation();\n  const theme = useTheme();\n  const [scroll, setScroll] = useState(false);\n  const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\n  const classes = useStyles({\n    scroll,\n    isMobile\n  });\n\n  const handleNav = () => setScroll(window.scrollY > 30);\n\n  window.addEventListener(\"scroll\", handleNav);\n  const appbarVariants = {\n    initial: {\n      height: isMobile ? 70 : 100,\n      boxShadow: theme.shadows[0]\n    },\n    scrolled: {\n      height: theme.navbarHeight,\n      boxShadow: theme.shadows[10]\n    }\n  };\n  useEffect(() => {\n    if (!isLoading) {\n      controls.start({\n        y: 0,\n        transition: {\n          delay: 0.05,\n          type: \"spring\",\n          stiffness: 260,\n          damping: 20\n        }\n      });\n    } else {\n      controls.start({\n        y: -100\n      });\n    }\n  }, [isLoading, controls]);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    animate: controls,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      elevation: 0,\n      className: classes.navbar,\n      component: \"nav\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        component: motion.div,\n        variants: appbarVariants,\n        animate: scroll ? \"scrolled\" : \"initial\",\n        transition: {\n          type: \"spring\",\n          stiffness: 260,\n          damping: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          className: classes.logo,\n          setHomeIsActive: setHomeIsActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            homeIsActive: homeIsActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          mdUp: true,\n          children: /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n            isOpen: mobileNavIsOpen,\n            onClick: () => setMobileNavIsOpen(!mobileNavIsOpen)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      mdUp: true,\n      children: /*#__PURE__*/_jsxDEV(MobileMenu, {\n        open: mobileNavIsOpen,\n        onClose: () => setMobileNavIsOpen(false),\n        onOpen: () => setMobileNavIsOpen(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"sBpk395qtmNRWTAV7zeakrctiuE=\", false, function () {\n  return [useMediaQuery, useAnimation, useTheme, useStyles];\n});\n\n_c = Navbar;\nconst useStyles = makeStyles(theme => ({\n  logo: {\n    width: \"150px\"\n  },\n  navbar: {\n    backgroundColor: theme.palette.background.default\n  },\n  toolbar: {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: props => props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)\n  }\n}));\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/imary/OneDrive/Desktop/Github Repo/portfolio/src/components/Navbar/Navbar.js"],"names":["React","useContext","useState","useEffect","makeStyles","useTheme","useMediaQuery","AppBar","Toolbar","Hidden","motion","useAnimation","Logo","Menu","MobileMenu","HamburgerIcon","loaderContext","Navbar","homeIsActive","setHomeIsActive","isMobile","isLoading","controls","theme","scroll","setScroll","mobileNavIsOpen","setMobileNavIsOpen","classes","useStyles","handleNav","window","scrollY","addEventListener","appbarVariants","initial","height","boxShadow","shadows","scrolled","navbarHeight","start","y","transition","delay","type","stiffness","damping","navbar","toolbar","div","logo","width","backgroundColor","palette","background","default","justifyContent","alignItems","padding","props","spacing"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport Logo from \"./Logo\";\nimport Menu from \"./Menu\";\nimport MobileMenu from \"./MobileMenu\";\nimport HamburgerIcon from \"./HamburgerIcon\";\nimport loaderContext from \"../../contexts/loaderContext\";\n\nconst Navbar = () => {\n    const [homeIsActive, setHomeIsActive]=useState(true)\n    const isMobile = useMediaQuery(\"(max-width:700px)\");\n    const { isLoading } = useContext(loaderContext);\n    const controls = useAnimation();\n    const theme = useTheme();\n    const [scroll, setScroll] = useState(false);\n    const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\n    const classes = useStyles({ scroll, isMobile });\n    const handleNav = () => setScroll(window.scrollY > 30);\n    window.addEventListener(\"scroll\", handleNav);\n\n    const appbarVariants = {\n        initial: { height: isMobile ? 70 : 100, boxShadow: theme.shadows[0] },\n        scrolled: { height: theme.navbarHeight, boxShadow: theme.shadows[10] },\n    };\n\n    useEffect(() => {\n        if (!isLoading) {\n            controls.start({\n                y: 0,\n                transition: {\n                    delay: 0.05,\n                    type: \"spring\",\n                    stiffness: 260,\n                    damping: 20,\n                },\n            });\n        } else {\n            controls.start({ y: -100 });\n        }\n    }, [isLoading, controls]);\n\n    return (\n        <motion.div\n            animate={controls}\n        >\n            <AppBar position=\"fixed\" elevation={0} className={classes.navbar} component=\"nav\">\n                <Toolbar\n                    className={classes.toolbar}\n                    component={motion.div}\n                    variants={appbarVariants}\n                    animate={scroll ? \"scrolled\" : \"initial\"}\n                    transition={{\n                        type: \"spring\",\n                        stiffness: 260,\n                        damping: 20,\n                    }}\n                >\n                    <Logo className={classes.logo} setHomeIsActive={setHomeIsActive} />\n                    <Hidden smDown>\n                        <Menu homeIsActive={homeIsActive} />\n                    </Hidden>\n                    <Hidden mdUp>\n                        <HamburgerIcon isOpen={mobileNavIsOpen} onClick={() => setMobileNavIsOpen(!mobileNavIsOpen)} />\n                    </Hidden>\n                </Toolbar>\n            </AppBar>\n            <Hidden mdUp>\n                <MobileMenu\n                    open={mobileNavIsOpen}\n                    onClose={() => setMobileNavIsOpen(false)}\n                    onOpen={() => setMobileNavIsOpen(true)}\n                />\n            </Hidden>\n        </motion.div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        width: \"150px\",\n    },\n    navbar: {\n        backgroundColor: theme.palette.background.default,\n    },\n    toolbar: {\n        justifyContent: \"space-between\",\n        alignItems:\"center\",\n        padding: (props) => (props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)),\n    },\n}));\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}