{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imary\\\\OneDrive\\\\Desktop\\\\Github Repo\\\\portfolio\\\\src\\\\components\\\\DarkModeSwitcher\\\\DarkModeSwitcher.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\nimport ThemeContext from \"../../contexts/themeContext\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DarkModeSwitcher = ({\n  onClose\n}) => {\n  _s();\n\n  const {\n    isDarkMode,\n    setIsDarkMode\n  } = useContext(ThemeContext);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    control: /*#__PURE__*/_jsxDEV(Switch, {\n      checked: isDarkMode,\n      name: \"checkedDarkMode\",\n      color: \"primary\",\n      onChange: () => {\n        if (onClose) {\n          onClose();\n        }\n\n        setIsDarkMode(!isDarkMode);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this),\n    label: t('dark_mode')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DarkModeSwitcher, \"KtmpXB/VJqHIDm4Y7on1ag0FrDg=\", false, function () {\n  return [useTranslation];\n});\n\n_c = DarkModeSwitcher;\nexport default DarkModeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkModeSwitcher\");","map":{"version":3,"sources":["C:/Users/imary/OneDrive/Desktop/Github Repo/portfolio/src/components/DarkModeSwitcher/DarkModeSwitcher.js"],"names":["React","useContext","Switch","FormControlLabel","ThemeContext","useTranslation","DarkModeSwitcher","onClose","isDarkMode","setIsDarkMode","t"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,MAAT,EAAiBC,gBAAjB,QAAyC,mBAAzC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACtC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCR,UAAU,CAACG,YAAD,CAAhD;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAQL,cAAc,EAA5B;AACA,sBACI,QAAC,gBAAD;AACI,IAAA,OAAO,eACH,QAAC,MAAD;AACI,MAAA,OAAO,EAAEG,UADb;AAEI,MAAA,IAAI,EAAC,iBAFT;AAGI,MAAA,KAAK,EAAC,SAHV;AAII,MAAA,QAAQ,EAAE,MAAM;AACZ,YAAID,OAAJ,EAAa;AACTA,UAAAA,OAAO;AACV;;AACDE,QAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH;AATL;AAAA;AAAA;AAAA;AAAA,YAFR;AAcI,IAAA,KAAK,EAAEE,CAAC,CAAC,WAAD;AAdZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CArBD;;GAAMJ,gB;UAEYD,c;;;KAFZC,gB;AAuBN,eAAeA,gBAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\nimport ThemeContext from \"../../contexts/themeContext\";\nimport { useTranslation } from \"react-i18next\";\n\nconst DarkModeSwitcher = ({ onClose }) => {\n    const { isDarkMode, setIsDarkMode } = useContext(ThemeContext);\n    const { t } = useTranslation()\n    return (\n        <FormControlLabel\n            control={\n                <Switch\n                    checked={isDarkMode}\n                    name=\"checkedDarkMode\"\n                    color=\"primary\"\n                    onChange={() => {\n                        if (onClose) {\n                            onClose();\n                        }\n                        setIsDarkMode(!isDarkMode);\n                    }}\n                />\n            }\n            label={t('dark_mode')}\n        />\n    );\n};\n\nexport default DarkModeSwitcher;\n"]},"metadata":{},"sourceType":"module"}