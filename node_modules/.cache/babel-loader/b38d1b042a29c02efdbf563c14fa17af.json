{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imary\\\\OneDrive\\\\Desktop\\\\Github Repo\\\\portfolio\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, Suspense } from \"react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { darkTheme, lightTheme } from \"./assets/theme\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"./App.css\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./Routes\";\nimport ThemeContext from \"./contexts/themeContext\";\nimport LoaderContext from \"./contexts/loaderContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n      setIsDarkMode(true);\n    } else {\n      setIsDarkMode(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n        value: {\n          isDarkMode,\n          setIsDarkMode\n        },\n        children: /*#__PURE__*/_jsxDEV(LoaderContext.Provider, {\n          value: {\n            isLoading,\n            setIsLoading\n          },\n          children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n            theme: isDarkMode ? darkTheme : lightTheme,\n            children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"yxVRDg5CQBGWKZ2XaS/9djhQYjg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/imary/OneDrive/Desktop/Github Repo/portfolio/src/App.js"],"names":["useState","useEffect","Suspense","ThemeProvider","darkTheme","lightTheme","CssBaseline","ScrollToTop","BrowserRouter","Router","Routes","ThemeContext","LoaderContext","App","isDarkMode","setIsDarkMode","isLoading","setIsLoading","window","matchMedia","matches"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,gBAAtC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,MAAM,CAACC,UAAP,IAAqBD,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAA3E,EAAoF;AAChFL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KAFD,MAEO;AACHA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ,GANQ,EAMN,EANM,CAAT;AAOA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA,cAApB;AAAA,6BACI,QAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAE;AAAED,UAAAA,UAAF;AAAcC,UAAAA;AAAd,SAA9B;AAAA,+BACI,QAAC,aAAD,CAAe,QAAf;AAAwB,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAF;AAAaC,YAAAA;AAAb,WAA/B;AAAA,iCACI,QAAC,aAAD;AAAe,YAAA,KAAK,EAAEH,UAAU,GAAGV,SAAH,GAAeC,UAA/C;AAAA,oCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAzBQQ,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect, Suspense } from \"react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { darkTheme, lightTheme } from \"./assets/theme\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"./App.css\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./Routes\";\nimport ThemeContext from \"./contexts/themeContext\";\nimport LoaderContext from \"./contexts/loaderContext\";\n\nfunction App() {\n    const [isDarkMode, setIsDarkMode] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n            setIsDarkMode(true);\n        } else {\n            setIsDarkMode(false);\n        }\n    }, []);\n    return (\n        <Router>\n            <Suspense fallback={<div></div>}>\n                <ThemeContext.Provider value={{ isDarkMode, setIsDarkMode }}>\n                    <LoaderContext.Provider value={{ isLoading, setIsLoading }}>\n                        <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n                            <CssBaseline />\n                            <ScrollToTop />\n                            <Routes />\n                        </ThemeProvider>\n                    </LoaderContext.Provider>\n                </ThemeContext.Provider>\n            </Suspense>\n        </Router>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}